{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import Header from'../components/Header';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function UploadList(){const[file,setFile]=useState(null);const[agents,setAgents]=useState([]);const[message,setMessage]=useState('');const token=localStorage.getItem('token');useEffect(()=>{axios.get('http://localhost:5000/api/agents',{headers:{Authorization:\"Bearer \".concat(token)}}).then(res=>setAgents(res.data));},[token]);const handleFileChange=e=>{setFile(e.target.files[0]);};const handleSubmit=async e=>{e.preventDefault();setMessage('');if(!file)return setMessage('Please select a file');const formData=new FormData();formData.append('file',file);try{await axios.post('http://localhost:5000/api/lists/upload',formData,{headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'multipart/form-data'}});setMessage('List uploaded and distributed');}catch(err){var _err$response,_err$response$data;setMessage(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Upload failed');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Upload List\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv,.xlsx,.xls\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Upload\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message})]})]});}export default UploadList;","map":{"version":3,"names":["React","useState","useEffect","axios","Header","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UploadList","file","setFile","agents","setAgents","message","setMessage","token","localStorage","getItem","get","headers","Authorization","concat","then","res","data","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","post","err","_err$response","_err$response$data","response","children","className","onSubmit","type","accept","onChange"],"sources":["E:/mern/frontend/src/pages/UploadList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\n\r\nfunction UploadList() {\r\n  const [file, setFile] = useState(null);\r\n  const [agents, setAgents] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/agents', { headers: { Authorization: `Bearer ${token}` } })\r\n      .then(res => setAgents(res.data));\r\n  }, [token]);\r\n\r\n  const handleFileChange = e => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    if (!file) return setMessage('Please select a file');\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    try {\r\n      await axios.post('http://localhost:5000/api/lists/upload', formData, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      setMessage('List uploaded and distributed');\r\n    } catch (err) {\r\n      setMessage(err.response?.data?.message || 'Upload failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"app-container\">\r\n        <h3>Upload List</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"file\" accept=\".csv,.xlsx,.xls\" onChange={handleFileChange} />\r\n          <button type=\"submit\">Upload</button>\r\n        </form>\r\n        {message && <p>{message}</p>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1C,QAAS,CAAAC,UAAUA,CAAA,CAAG,CACpB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACa,MAAM,CAAEC,SAAS,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAAiB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3ClB,SAAS,CAAC,IAAM,CACdC,KAAK,CAACkB,GAAG,CAAC,kCAAkC,CAAE,CAAEC,OAAO,CAAE,CAAEC,aAAa,WAAAC,MAAA,CAAYN,KAAK,CAAG,CAAE,CAAC,CAAC,CAC7FO,IAAI,CAACC,GAAG,EAAIX,SAAS,CAACW,GAAG,CAACC,IAAI,CAAC,CAAC,CACrC,CAAC,CAAE,CAACT,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAU,gBAAgB,CAAGC,CAAC,EAAI,CAC5BhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAH,CAAC,EAAI,CAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC,CAClBhB,UAAU,CAAC,EAAE,CAAC,CACd,GAAI,CAACL,IAAI,CAAE,MAAO,CAAAK,UAAU,CAAC,sBAAsB,CAAC,CACpD,KAAM,CAAAiB,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAExB,IAAI,CAAC,CAC7B,GAAI,CACF,KAAM,CAAAT,KAAK,CAACkC,IAAI,CAAC,wCAAwC,CAAEH,QAAQ,CAAE,CACnEZ,OAAO,CAAE,CACP,eAAe,WAAAE,MAAA,CAAYN,KAAK,CAAE,CAClC,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACFD,UAAU,CAAC,+BAA+B,CAAC,CAC7C,CAAE,MAAOqB,GAAG,CAAE,KAAAC,aAAA,CAAAC,kBAAA,CACZvB,UAAU,CAAC,EAAAsB,aAAA,CAAAD,GAAG,CAACG,QAAQ,UAAAF,aAAA,kBAAAC,kBAAA,CAAZD,aAAA,CAAcZ,IAAI,UAAAa,kBAAA,iBAAlBA,kBAAA,CAAoBxB,OAAO,GAAI,eAAe,CAAC,CAC5D,CACF,CAAC,CAED,mBACER,KAAA,CAAAE,SAAA,EAAAgC,QAAA,eACEpC,IAAA,CAACF,MAAM,GAAE,CAAC,cACVI,KAAA,QAAKmC,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5BpC,IAAA,OAAAoC,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBlC,KAAA,SAAMoC,QAAQ,CAAEZ,YAAa,CAAAU,QAAA,eAC3BpC,IAAA,UAAOuC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,iBAAiB,CAACC,QAAQ,CAAEnB,gBAAiB,CAAE,CAAC,cAC1EtB,IAAA,WAAQuC,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,QAAM,CAAQ,CAAC,EACjC,CAAC,CACN1B,OAAO,eAAIV,IAAA,MAAAoC,QAAA,CAAI1B,OAAO,CAAI,CAAC,EACzB,CAAC,EACN,CAAC,CAEP,CAEA,cAAe,CAAAL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
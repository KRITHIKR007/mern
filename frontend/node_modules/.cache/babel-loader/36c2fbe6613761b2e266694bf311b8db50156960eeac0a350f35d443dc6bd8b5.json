{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern\\\\frontend\\\\src\\\\pages\\\\UploadList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadList() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [agents, setAgents] = useState([]);\n  const [message, setMessage] = useState('');\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/agents', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setAgents(res.data));\n  }, [token]);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    if (!file) return setMessage('Please select a file');\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      await axios.post('http://localhost:5000/api/lists/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMessage('List uploaded and distributed');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Upload failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv,.xlsx,.xls\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UploadList, \"rdOhhJxWgSax+Gxo9OVt661TYnU=\");\n_c = UploadList;\nexport default UploadList;\nvar _c;\n$RefreshReg$(_c, \"UploadList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadList","_s","file","setFile","agents","setAgents","message","setMessage","token","localStorage","getItem","get","headers","Authorization","then","res","data","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","post","err","_err$response","_err$response$data","response","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","accept","onChange","_c","$RefreshReg$"],"sources":["E:/mern/frontend/src/pages/UploadList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\n\r\nfunction UploadList() {\r\n  const [file, setFile] = useState(null);\r\n  const [agents, setAgents] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/agents', { headers: { Authorization: `Bearer ${token}` } })\r\n      .then(res => setAgents(res.data));\r\n  }, [token]);\r\n\r\n  const handleFileChange = e => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    if (!file) return setMessage('Please select a file');\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    try {\r\n      await axios.post('http://localhost:5000/api/lists/upload', formData, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      setMessage('List uploaded and distributed');\r\n    } catch (err) {\r\n      setMessage(err.response?.data?.message || 'Upload failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"app-container\">\r\n        <h3>Upload List</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"file\" accept=\".csv,.xlsx,.xls\" onChange={handleFileChange} />\r\n          <button type=\"submit\">Upload</button>\r\n        </form>\r\n        {message && <p>{message}</p>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3CjB,SAAS,CAAC,MAAM;IACdC,KAAK,CAACiB,GAAG,CAAC,kCAAkC,EAAE;MAAEC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUL,KAAK;MAAG;IAAE,CAAC,CAAC,CAC7FM,IAAI,CAACC,GAAG,IAAIV,SAAS,CAACU,GAAG,CAACC,IAAI,CAAC,CAAC;EACrC,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,MAAMS,gBAAgB,GAAGC,CAAC,IAAI;IAC5Bf,OAAO,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAMH,CAAC,IAAI;IAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBf,UAAU,CAAC,EAAE,CAAC;IACd,IAAI,CAACL,IAAI,EAAE,OAAOK,UAAU,CAAC,sBAAsB,CAAC;IACpD,MAAMgB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEvB,IAAI,CAAC;IAC7B,IAAI;MACF,MAAMR,KAAK,CAACgC,IAAI,CAAC,wCAAwC,EAAEH,QAAQ,EAAE;QACnEX,OAAO,EAAE;UACP,eAAe,EAAE,UAAUJ,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFD,UAAU,CAAC,+BAA+B,CAAC;IAC7C,CAAC,CAAC,OAAOoB,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZtB,UAAU,CAAC,EAAAqB,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcZ,IAAI,cAAAa,kBAAA,uBAAlBA,kBAAA,CAAoBvB,OAAO,KAAI,eAAe,CAAC;IAC5D;EACF,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAgC,QAAA,gBACElC,OAAA,CAACF,MAAM;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtC,OAAA;MAAKuC,SAAS,EAAC,eAAe;MAAAL,QAAA,gBAC5BlC,OAAA;QAAAkC,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBtC,OAAA;QAAMwC,QAAQ,EAAEhB,YAAa;QAAAU,QAAA,gBAC3BlC,OAAA;UAAOyC,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,iBAAiB;UAACC,QAAQ,EAAEvB;QAAiB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1EtC,OAAA;UAAQyC,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACN7B,OAAO,iBAAIT,OAAA;QAAAkC,QAAA,EAAIzB;MAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA,eACN,CAAC;AAEP;AAAClC,EAAA,CA/CQD,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AAiDnB,eAAeA,UAAU;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}